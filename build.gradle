/*
 * Copyright (C) 2013 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */

task wrapper(type: Wrapper) {
  gradleVersion = '1.8'
}

project.ext {
  /* the ros plugin defines this, but since we're building the plugin... */
  rosMavenDeploymentRepository = "$System.env.ROS_MAVEN_DEPLOYMENT_REPOSITORY"
  rosMavenPath = "$System.env.ROS_MAVEN_PATH".split(':')
  rosMavenRepository = "$System.env.ROS_MAVEN_REPOSITORY"
}

allprojects {
  group='org.ros.rosjava_bootstrap'
  version = '0.1.15'
}

subprojects {
  /* Have to manually do this below since our gradle plugin is our sub project */
  apply plugin: 'java'
  apply plugin: 'maven'
  apply plugin: 'maven-publish'

  sourceCompatibility = 1.6
  targetCompatibility = 1.6

  def repoURLs = project.rosMavenPath.collect { 'file://' + it }
  repositories {
    repoURLs.each { p ->
      maven {
        url p
      }
    }
    mavenLocal()
    maven {
      url project.rosMavenRepository
    }
  }
  if ( project.rosMavenDeploymentRepository != 'null' && project.rosMavenDeploymentRepository != '' ) {
    publishing {
      publications {
        mavenJava(MavenPublication) {
          from components.java
        }
      }
      repositories {
        maven {
           url 'file://' + project.rosMavenDeploymentRepository
        }
      }
    }
  }
}

defaultTasks 'install'
